---
- name: check docker version
  command: "docker --version"
  register: docker_version
  ignore_errors: yes
  changed_when: false

- name: ensure required packages are installed
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: true
  become: true
  when: docker_version.rc != 0

- name: create /etc/apt/keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"
  become: true
  when: docker_version.rc != 0

- name: download docker's official gpg key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"
    force: true
  become: true
  when: docker_version.rc != 0

- name: ensure docker's gpg key is readable
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.asc
    mode: "0644"
  become: true
  when: docker_version.rc != 0

- name: get system architecture
  ansible.builtin.command: dpkg --print-architecture
  register: dpkg_architecture
  changed_when: false
  when: docker_version.rc != 0

- name: get system codename
  ansible.builtin.command: bash -c '. /etc/os-release && echo "$VERSION_CODENAME"'
  register: system_codename
  changed_when: false
  when: docker_version.rc != 0

- name: set docker repository variables
  ansible.builtin.set_fact:
    docker_repo_url: >-
      {% if ansible_distribution == "Ubuntu" %}
        https://download.docker.com/linux/ubuntu
      {% else %}
        https://download.docker.com/linux/debian
      {% endif %}
    docker_repo_codename: "{{ system_codename.stdout }}"
  when: docker_version.rc != 0

- name: add docker repository to apt sources
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/docker.list
    content: "deb [arch={{ dpkg_architecture.stdout | trim }} signed-by=/etc/apt/keyrings/docker.asc] {{ docker_repo_url | trim }} {{ docker_repo_codename | trim }} stable"
    mode: "0644"
  become: true
  when: docker_version.rc != 0

- name: update apt cache
  ansible.builtin.apt:
    update_cache: true
  become: true
  when: docker_version.rc != 0

- name: install docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  become: true
  when: docker_version.rc != 0

- name: add current user to docker group
  ansible.builtin.user:
    name: "{{ ansible_env['USER'] }}"
    groups: docker
    append: true
  become: true
  when: docker_version.rc != 0
