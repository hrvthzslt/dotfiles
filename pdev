#!/bin/sh

collect() {
  user=$(whoami)
  uid=$(id -u)
  gid=$(id -g)
  script=$(realpath "$0")
  script_path=$(dirname "$script")
  image_tag="pdev"
}

build() {
  docker build \
    --build-arg HOST_USER="$user" \
    --build-arg HOST_UID="$uid" \
    --build-arg HOST_GID="$gid" \
    -t "$image_tag" "$script_path"
}

run() {
  project_volume=$1

  if [ -z "$project_volume" ]; then
    echo "Usage: pdev --run <project-volume>"
    exit 1
  fi

  project_basename=$(basename "$(pwd "$project_volume")")

  project_path_in_container="/home/$user/workspace/$project_basename"

  docker run -it --rm --network host \
    -v "$project_volume":"$project_path_in_container" \
    -w "$project_path_in_container" \
    -v "$HOME"/.ssh:/home/"$user"/.ssh \
    -v "$HOME"/.gitconfig:/home/"$user"/.gitconfig \
    -v "$HOME"/intelephense/:/home/"$user"/intelephense/ \
    -v "$script_path"/roles/shell/files/bash/.bashrc:/home/"$user"/.bashrc \
    -v "$script_path"/roles/tmux/files/tmux/tmux.conf:/home/"$user"/.config/tmux/tmux.conf \
    -v "$script_path"/roles/starship/tasks/main.yml:/home/"$user"/.config/starship.toml \
    -v "$script_path"/roles/neovim/files/nvim/:/home/"$user"/.config/nvim \
    "$image_tag"
}

main() {
  collect

  case $1 in
    --build | -b | b)
      build
      ;;
    --run | -r | r)
      run "$2"
      ;;
    *)
      echo "Usage: pdev {--build|--run}"
      exit 1
      ;;
  esac
}

main "$1" "$2"
